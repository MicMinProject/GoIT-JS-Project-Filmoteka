{"version":3,"sources":["js/fetchMovie.js","js/movieData.js"],"names":["api","baseUrl","apiKey","fetchMovieData","movieId","response","fetch","json","watchedBtn","document","querySelector","queueBtn","movieData","photo","title","votesAvarage","votes","popularity","orginalTitle","genre","about","id","openModalCard","getModalData","e","modalData","target","closest","getAttribute","renderMovie","error","console","log","clearModal","then","res","data","poster_path","vote_average","vote_count","original_title","genres","map","genresArray","name","toString","overview","insertAdjacentHTML","innerHTML","addToWatched","watchedMovie","JSON","parse","localStorage","getItem","movieTitleForConsole","newMovie","movieTitle","ID","movie","push","setItem","stringify","addToQueue","queue","addEventListener"],"mappings":"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","file":"movieData.421c0e4c.js","sourceRoot":"../src","sourcesContent":["const api = {\n  baseUrl: 'https://api.themoviedb.org',\n  apiKey: '130c7a7ecd86dbb286ae26c3cdcca88c',\n};\n\n\nasync function fetchMovieData(movieId) {\n\n  const response = await fetch(\n    `${api.baseUrl}/3/movie/${movieId}?api_key=${api.apiKey}&language=en-US`\n  );\n\n  return response.json();\n}\n\n\nexport { fetchMovieData };\n","const watchedBtn = document.querySelector('.watched');\nconst queueBtn = document.querySelector('.queue');\nimport { fetchMovieData } from './fetchMovie.js';\n\nlet movieData = {\n  photo: '',\n  title: '',\n  votesAvarage: '',\n  votes: '',\n  popularity: '',\n  orginalTitle: '',\n  genre: '',\n  about: '',\n  id: '',\n};\n\n// generowanie karty pojedynczego filmu w modalu\nconst openModalCard = document.querySelector('[data-modal-open]');\n\nconst getModalData = (e) => {\n  let modalData = e.target.closest(\".movie-card\");\n  let movieId = modalData.getAttribute('data-id');\n  try {\n    if (movieId !== null) {\n      renderMovie(movieId);\n    }\n  } catch (error) {\n    console.log(\"Wystąpił błąd przy pobieraniu danych z bazy\");\n  }\n}\n\nopenModalCard.addEventListener('click', getModalData);\n// ====================================================\n\nfunction renderMovie(movieId) {\n  clearModal();\n  fetchMovieData(movieId).then(res => {\n    let data = res;\n    movieData.photo = data.poster_path;\n    movieData.title = data.title;\n    movieData.votesAvarage = data.vote_average;\n    movieData.votes = data.vote_count;\n    movieData.popularity = data.popularity;\n    movieData.orginalTitle = data.original_title;\n    const genresArray = data.genres;\n    let genres = genresArray.map(genresArray => genresArray.name);\n    movieData.genre = genres.toString();\n    movieData.about = data.overview;\n    movieData.id = data.id;\n\n    document\n      .querySelector('.movie')\n      .insertAdjacentHTML(\n        'afterbegin',\n        `<img class=\"modal__movie-photo\" src=\"https://image.tmdb.org/t/p/original${movieData.photo}\" alt=\"photo\" />`,\n      );\n    document\n      .querySelector('.modal__movie-title')\n      .insertAdjacentHTML('afterbegin', `${movieData.title}`);\n    document.querySelector('.vote').insertAdjacentHTML('afterbegin', `${movieData.votesAvarage}`);\n    document.querySelector('.votes').insertAdjacentHTML('afterbegin', `${movieData.votes}`);\n    document\n      .querySelector('.popularity')\n      .insertAdjacentHTML('afterbegin', `${movieData.popularity}`);\n    document\n      .querySelector('.orginal-title')\n      .insertAdjacentHTML('afterbegin', `${movieData.orginalTitle}`);\n    document.querySelector('.genre').insertAdjacentHTML('afterbegin', `${movieData.genre}`);\n    document.querySelector('.modal__about').insertAdjacentHTML('afterbegin', `${movieData.about}`);\n  });\n}\n\nfunction clearModal() {\n  document.querySelector('.movie').innerHTML = '';\n  document.querySelector('.modal__movie-title').innerHTML = '';\n  document.querySelector('.vote').innerHTML = '';\n  document.querySelector('.votes').innerHTML = '';\n  document.querySelector('.popularity').innerHTML = '';\n  document.querySelector('.orginal-title').innerHTML = '';\n  document.querySelector('.genre').innerHTML = '';\n  document.querySelector('.modal__about').innerHTML = '';\n}\n\nfunction addToWatched() {\n  let watchedMovie;\n  watchedMovie = JSON.parse(localStorage.getItem('watchedMovie'));\n  if (watchedMovie == null) watchedMovie = [];\n\n  let movieTitleForConsole = { movieTitle: movieData.title, ID: movieData.id };\n  let newMovie = { movieTitle: movieData.title, ID: movieData.id };\n\n  for (let movie of watchedMovie) {\n    if (movie.ID === newMovie.ID) {\n      newMovie = '';\n      break;\n    }\n  }\n  console.log(watchedMovie)\n  if (newMovie === '') {\n    console.log(`Film \"${movieTitleForConsole.movieTitle}\" jest już w bazie`);\n  } else {\n    watchedMovie.push(newMovie);\n    localStorage.setItem('watchedMovie', JSON.stringify(watchedMovie));\n    console.log(`Dodałeś film \"${movieTitleForConsole.movieTitle}\" do obejrzanych`);\n  }\n}\n  \n\n  \nfunction addToQueue() {\n  let queue;\n\n  queue = JSON.parse(localStorage.getItem('queue'));\n  if (queue == null) queue = [];\n\n  let movieTitleForConsole = { movieTitle: movieData.title, ID: movieData.id };\n  let newMovie = { movieTitle: movieData.title, ID: movieData.id };\n\n  for (let movie of queue) {\n    if (movie.ID === newMovie.ID) {\n      newMovie = '';\n      break;\n    }\n  }\n\n  if (newMovie === '') {\n    console.log(`Film \"${movieTitleForConsole.movieTitle}\" jest już w kolejce`);\n  } else {\n    queue.push(newMovie);\n    localStorage.setItem('queue', JSON.stringify(queue));\n    console.log(`Dodałeś film \"${movieTitleForConsole.movieTitle}\" do kolejki`);\n  }\n}\n\nwatchedBtn.addEventListener('click', addToWatched);\n\nqueueBtn.addEventListener('click', addToQueue);\n\nexport { addToWatched, addToQueue, renderMovie };"]}